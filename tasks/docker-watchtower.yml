---
- name: Set up volume list
  ansible.builtin.set_fact:
    watchtower_volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

- name: Check if file '/root/.docker/config.json' exists.
  ansible.builtin.stat:
    path: "/root/.docker/config.json"
  register: docker_config_file

- name: Set up volume list
  ansible.builtin.set_fact:
    watchtower_volumes: "{{ watchtower_volumes + ['/root/.docker/config.json:/config.json'] }}"
  when: docker_config_file.stat.exists

- name: Create default env's
  ansible.builtin.set_fact:
    watchtower_env:
      TZ: "Europe/Berlin"
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: "{{ inventory_hostname }}"
      WATCHTOWER_NOTIFICATION_TITLE_TAG: "{{ inventory_hostname }}"

- name: Set WATCHTOWER_POLL_INTERVAL
  ansible.builtin.set_fact:
    scheduling_env:
      WATCHTOWER_POLL_INTERVAL: "{{ watchtower_poll_interval }}"
  when: not watchtower_schedule | length

- name: Set WATCHTOWER_SCHEDULE
  ansible.builtin.set_fact:
    scheduling_env:
      WATCHTOWER_SCHEDULE: "{{ watchtower_schedule }}"
  when: watchtower_schedule | length

- name: Append scheduling_env to env's
  ansible.builtin.set_fact:
    watchtower_env: "{{ watchtower_env | combine(scheduling_env) }}"

- name: Set mail notifications
  ansible.builtin.set_fact:
    notification_env:
      WATCHTOWER_NOTIFICATIONS: "email"
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "{{ watchtower_notification_email_from }}"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "{{ watchtower_notification_email_to }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: "{{ watchtower_notification_email_server }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: "{{ watchtower_notification_email_server_port }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: "{{ watchtower_notification_email_server_user }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: "{{ watchtower_notification_email_server_password }}"
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: "{{ watchtower_notification_email_delay }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG: "{{ inventory_hostname }}"
  when: watchtower_notification_service == 'email'

- name: Set shoutrrr notifications
  ansible.builtin.set_fact:
    notification_env:
      WATCHTOWER_NOTIFICATIONS: "{{ watchtower_notification_service }}"
      WATCHTOWER_NOTIFICATION_URL: "{{ watchtower_notification_url }}"
  when: watchtower_notification_url is defined and watchtower_notification_service != 'email'

- name: Append notification_env to env's
  ansible.builtin.set_fact:
    watchtower_env: "{{ watchtower_env | combine(notification_env) }}"

- name: Start Watchtower
  become: true
  community.docker.docker_container:
    name: watchtower
    image: containrrr/watchtower
    userns_mode: "host"
    comparisons:
      "*": strict
    pull: true
    state: started
    restart_policy: always
    volumes: "{{ watchtower_volumes }}"
    env: "{{ watchtower_env }}"
    labels:
      "com.centurylinklabs.watchtower.enable": "false"
