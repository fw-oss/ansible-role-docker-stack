---
# Create Portainer network if Portainer and Portainer Agent are on the same host (and both activated)
- name: Create Portainer Network
  community.docker.docker_network:
    name: "portainer"
  when: docker_install_portainer | bool and docker_install_portainer_agent | bool

# Prepare network information
- name: Create list of networks
  ansible.builtin.set_fact:
    portainer_networks:
      - name: "{{ docker_traefik_network_name }}"
      - name: "portainer"
  when: docker_install_portainer | bool and docker_install_portainer_agent | bool

- name: Create list of networks
  ansible.builtin.set_fact:
    portainer_networks:
      - name: "{{ docker_traefik_network_name }}"
  when: docker_install_portainer | bool and not docker_install_portainer_agent | bool

# Prepare volume information
- name: Create list of volumes
  ansible.builtin.set_fact:
    portainer_volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - "portainer_data:/data"

# Labels
- name: Create list of labels
  ansible.builtin.set_fact:
    portainer_labels:
      traefik.enable: "true"
      traefik.http.routers.portainer-secure.entrypoints: "{{ docker_traefik_entrypoint_name_https }}"
      traefik.http.routers.portainer-secure.rule: "Host(`{{ docker_portainer_root_url }}`)"
      traefik.http.routers.portainer-secure.service: "portainer"
      traefik.http.services.portainer.loadbalancer.server.port: '9000'
  when: docker_portainer_root_url is defined

- name: Start Portainer
  community.docker.docker_container:
    name: portainer
    image: "{{ docker_portainer_image }}:{{ docker_portainer_version }}"
    userns_mode: "host"
    pull: true
    restart_policy: always
    security_opts:
      - no-new-privileges:true
    command: "-H unix:///var/run/docker.sock {{ docker_portainer_parameter }}"
    networks: "{{ portainer_networks }}"
    ports:
      - 8000:8000
      - 9443:9443
    volumes: "{{ portainer_volumes }}"
    state: started  # healthy avail from 3.11.0
    restart: "{{ docker_container_force_restart }}"
    labels: "{{ portainer_labels | default({}) }}"
    healthcheck:
      test: "wget --no-verbose --no-check-certificate --tries=1 --spider https://localhost:9443 || exit 1"
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
